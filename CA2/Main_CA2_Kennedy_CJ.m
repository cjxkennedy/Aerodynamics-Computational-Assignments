%% ASEN 3111 - Computational Assignment 2 - Main Script
% 
% Includes Solutions/Code for Three Problems:
% (1) - Visualizing Flow Around Thin Airfoils
% (2) - Visualizing Flow Around Thick Airfoils
% (3) - Comparison of the Lift Generated by Thin and Thick Airfoils
%
% Where
% (1) Produces 2 maximized Subplots with different resolutions
% (2) Produces 2 maximized Subplots with different resolutions
% (3) Produces c_l convergence plot and c_l vs alpha plot
% (3) Prints lift slope/zero-lift aoa from simulation & thin airfoil theory
%
% Author: CJ Kennedy
% Requires functions PlotThinAirfoil.m, PlotThickAirfoil.m, Vortex_Panel.m
% Date: 2/27/22
%
%% Housekeeping
clc;clear all;close all;
%% Given Parameters (SI Units)
c = 2; % chord length
alpha = 9*(pi/180); % angle of attack -> radians
V_inf = 60; % free-stream flow speed
p_inf = 85.5*10^3; % free-stream pressure 
rho_inf = 1; % free-stream density
%% Problem 1 %%
PlotThinAirfoil(c,alpha,V_inf,p_inf,rho_inf,10) % low res
sgtitle('Problem 1 - Low Resolution, N = 10')
PlotThinAirfoil(c,alpha,V_inf,p_inf,rho_inf,150) % high res
sgtitle('Problem 1 - High Resolution, N = 150')
%% Problem 2 %%
PlotThickAirfoil(c,alpha,V_inf,p_inf,rho_inf,10) % low res
sgtitle('Problem 2 - Low Resolution, N = 10')
PlotThickAirfoil(c,alpha,V_inf,p_inf,rho_inf,200) % high res
sgtitle('Problem 2 - High Resolution, N = 200')
%% Problem 3 %%
N_values = linspace(10,200,100); len = length(N_values); % range of N 
t = 12; % thickness for NACA 0012
c_l = zeros(1,len); % preallocate lift coefficients array
for i=1:len % loop thru N values and find c_l
    N = N_values(i); 
    A = linspace(c,0,N/2); % first half of x_b
    B = flip(A(1:end-1)); % second half of x_b
    C = t/100*(c/.2)*(.2969*sqrt(A./c)-.126*(A./c)-.3516*(A./c).^2+ ...
   .2843*(A./c).^3-.1036*(A./c).^4); % first half of y_b 
    D = t/100*(c/.2)*(.2969*sqrt(B./c)-.126*(B./c)-.3516*(B./c).^2+ ...
   .2843*(B./c).^3-.1036*(B./c).^4); % second half of y_b 
    x_b = [A B]; % catinate x vectors
    y_b = [-C D]; % catinate y vectors (note -C to flip sign)
    [c_l(i), ~, ~, ~, ~] = Vortex_Panel(x_b,y_b,V_inf,rad2deg(alpha),0);
end
figure() % plot N vs c_l
plot(N_values,c_l)
xlabel('Discrete Number of Vortices (N)')
ylabel('Sectional Coefficient of Lift (c_l)')
title('Convergence of c_l')
%% Lift Slope and Zero-Lift AoA 
actual = max(c_l); % actual value of c_l
error = zeros(1,len); % preallocate
for i = 1:len % find errors
    error(i) = abs((c_l(i)-actual)/actual); % calc error
end
index = find(error<=.01); % find index when error <= 1%
N = N_values(index(2)); % N in order to obtain 1% error
c_l_N = c_l(index(2)); % c_l at N_1%
range = .35; % range of angle of attack
%% NACA 0006
t = 6; % thickness 
A = linspace(c,0,N/2); % first half of x_b
B = flip(A(1:end-1)); % second half of x_b
C = t/100*(c/.2)*(.2969*sqrt(A./c)-.126*(A./c)-.3516*(A./c).^2+ ...
.2843*(A./c).^3-.1036*(A./c).^4); % first half of y_b 
D = t/100*(c/.2)*(.2969*sqrt(B./c)-.126*(B./c)-.3516*(B./c).^2+ ...
.2843*(B./c).^3-.1036*(B./c).^4); % second half of y_b 
x_b = [A B]; % catinate x vectors
y_b = [-C D]; % catinate y vectors (note -C to flip sign)
alpha = linspace(0,range); len = length(alpha); % vary alpha
c_l_6 = zeros(1,len);
for i=1:len
    [c_l_6(i), ~, ~, ~, ~] = Vortex_Panel(x_b,y_b,V_inf,rad2deg(alpha(i)),0);
end
% Polyfit to find slope 
p = polyfit(alpha,c_l_6,1);
slope6 = p(1);
%% NACA 0012
t = 12;
A = linspace(c,0,N/2); % first half of x_b
B = flip(A(1:end-1)); % second half of x_b
C = t/100*(c/.2)*(.2969*sqrt(A./c)-.126*(A./c)-.3516*(A./c).^2+ ...
.2843*(A./c).^3-.1036*(A./c).^4); % first half of y_b 
D = t/100*(c/.2)*(.2969*sqrt(B./c)-.126*(B./c)-.3516*(B./c).^2+ ...
.2843*(B./c).^3-.1036*(B./c).^4); % second half of y_b 
x_b = [A B]; % catinate x vectors
y_b = [-C D]; % catinate y vectors (note -C to flip sign)
alpha = linspace(0,range); len = length(alpha);% vary alpha
c_l_12 = zeros(1,len);
for i=1:len
    [c_l_12(i), ~, ~, ~, ~] = Vortex_Panel(x_b,y_b,V_inf,rad2deg(alpha(i)),0);
end
% Polyfit
p = polyfit(alpha,c_l_12,1);
slope12 = p(1);
%% NACA 0024
t = 24;
A = linspace(c,0,N/2); % first half of x_b
B = flip(A(1:end-1)); % second half of x_b
C = t/100*(c/.2)*(.2969*sqrt(A./c)-.126*(A./c)-.3516*(A./c).^2+ ...
.2843*(A./c).^3-.1036*(A./c).^4); % first half of y_b 
D = t/100*(c/.2)*(.2969*sqrt(B./c)-.126*(B./c)-.3516*(B./c).^2+ ...
.2843*(B./c).^3-.1036*(B./c).^4); % second half of y_b 
x_b = [A B]; % catinate x vectors
y_b = [-C D]; % catinate y vectors (note -C to flip sign)
alpha = linspace(0,range); len = length(alpha);
c_l_24 = zeros(1,len);
for i=1:len
    [c_l_24(i), ~, ~, ~, ~] = Vortex_Panel(x_b,y_b,V_inf,rad2deg(alpha(i)),0);
end
% Polyfit
p = polyfit(alpha,c_l_24,1);
slope24 = p(1);
%% Plotting NACA's
figure()
hold on
plot(alpha,c_l_6)
plot(alpha,c_l_12)
plot(alpha,c_l_24)
plot(alpha,(2*pi*alpha)) % plot thin airfoil theory
xlabel('Angle of Attack (\alpha) [rad]')
ylabel('Sectional Coefficient of Lift (c_l)')
title('NACA Airfoils - c_l vs \alpha')
legend('NACA 0006','NACA 0012','NACA 0024','Thin Airfoil Theory')
xlim([0 range])
%% Printing to CMD Window
fprintf('Number of panels to converge to 1 percent error of actual c_l is %.f.',N); fprintf(newline);
fprintf('c_l = %.3f at N = %.f.',[c_l_N N]); fprintf(newline);
fprintf('Estimations of Airfoil Characteristics from Plots:'); fprintf(newline);
fprintf('Lift Slope of NACA 0006 is %.2f.',slope6); fprintf(newline);
fprintf('Lift Slope of NACA 0012 is %.2f.',slope12); fprintf(newline);
fprintf('Lift Slope of NACA 0024 is %.2f.',slope24); fprintf(newline);
fprintf('Zero-Lift AoA for NACA 0006, 0012, and 0024 are at %.f radians.',0); fprintf(newline);
fprintf('Estimations of Airfoil Characteristics from Thin Airfoil Theory:'); fprintf(newline);
fprintf('Lift Slope of NACA 0006, 0012, and 0024 are %.2f.',2*pi); fprintf(newline);
fprintf('Zero-Lift AoA for NACA 0006, 0012, and 0024 are at %.f radians.',0); fprintf(newline);
%%